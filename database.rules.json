{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null",
    "users": {
      ".indexOn": ["email", "is_admin"],
      "$uid": {
        ".read": "auth != null && (auth.uid === $uid || root.child('users').child(auth.uid).child('is_admin').val() === true)",
        ".write": "auth != null && (auth.uid === $uid || root.child('users').child(auth.uid).child('is_admin').val() === true)"
      }
    },
    "registrations": {
      ".indexOn": ["email", "user_id", "registration_type", "registration_period", "payment_status"],
      ".read": "auth != null",
      ".write": "auth != null",
      "$registration_id": {
        ".read": "auth != null && (data.child('email').val() === auth.token.email || root.child('users').child(auth.uid).child('is_admin').val() === true)",
        ".write": "auth != null && (newData.child('email').val() === auth.token.email || root.child('users').child(auth.uid).child('is_admin').val() === true)"
      }
    },
    "submissions": {
      ".indexOn": ["email", "status"],
      ".read": "auth != null",
      ".write": "auth != null",
      "$submission_id": {
        ".read": "auth != null && (data.child('email').val() === auth.token.email || root.child('users').child(auth.uid).child('is_admin').val() === true)",
        ".write": "auth != null && (newData.child('email').val() === auth.token.email || root.child('users').child(auth.uid).child('is_admin').val() === true)"
      }
    },
    "registration_fees": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('is_admin').val() === true"
    },
    "venue": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('is_admin').val() === true"
    },
    "downloads": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('is_admin').val() === true",
      ".indexOn": ["category", "type"]
    }
  }
} 